name: Build

on:
  push:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  version:
    name: Check Version
    runs-on: ubuntu-latest
    outputs:
      latest: ${{ steps.latest.outputs.version }}
      previous: ${{ steps.previous.outputs.version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - run: sudo apt-get -y install jq

      - name: get the current version
        id: latest
        run: echo "version=$(git show HEAD:version.json | jq .version --raw-output)" >> "$GITHUB_OUTPUT"

      - name: get the previous version
        id: previous
        run: echo "version=$(git show HEAD~1:version.json | jq .version --raw-output)" >> "$GITHUB_OUTPUT"

      - name: check version
        shell: bash
        run: |
          if [[ "$VERSION" != "$PREVIOUS_VERSION" ]]; then
            echo "[DEBUG] version change confirmed: $VERSION";
            echo "          Latest Version: $VERSION";
            echo "        Previous Version: $PREVIOUS_VERSION";
          else
            echo "[ERROR] Version not changed:";
            echo "          Latest Version: $VERSION";
            echo "        Previous Version: $PREVIOUS_VERSION";
            exit 1;
          fi
        env:
          VERSION: ${{ steps.latest.outputs.version }}
          PREVIOUS_VERSION: ${{ steps.previous.outputs.version }}
  dockerize:
    name: Dockerize
    needs: version
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - run: sudo apt-get -y install binutils
      - run: sudo apt-get -y install fakeroot

      - name: create version number
        shell: bash
        run: echo "VERSION=v$(date +'%Y%m%d.%H%M%S')" >> "$GITHUB_ENV"

      - uses: actions/checkout@v4
      - uses: supabase/setup-cli@v1

      - name: download migrations and setup supabase
        env:
          GH_TOKEN: ${{ secrets.INSPIRE_TMS_READONLY_PERSONAL_ACCESS_TOKEN }}
        run: |
          cd ~ 
          supabase init
          mkdir ~/supabase/migrations
          gh release download -p 'migrations.tar.gz' --repo inspire-labs-tms-tech/inspire-tms-db
          tar -xf ~/migrations.tar.gz -C ~/supabase/migrations
          supabase db start

      - name: update version
        run: |
          sudo sed -i -e "s|00000000.000000|$VERSION|g" ./build.gradle
          sudo sed -i -e "s|00000000.000000|$VERSION|g" ./src/main/java/com/inspiretmstech/api/constants/Config.java
        env:
          VERSION: ${{ needs.version.outputs.latest }}

      - name: login to registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: extract metadata for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ env.VERSION }}
            type=raw,value=latest
            type=semver,pattern={{version}},value=${{ needs.version.outputs.latest }}

      - name: build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            GH_USER=inspire-labs-tech-readonly
            GH_TOKEN=${{ secrets.INSPIRE_TMS_READONLY_PERSONAL_ACCESS_TOKEN }}
            GOOGLE_GEOCODING_API_KEY=${{ secrets.GOOGLE_GEOCODING_API_KEY }}
  java:
    name: Generate Java Types
    needs:
      - version
      - dockerize
    runs-on: ubuntu-latest
    services:
      self:
        image: ghcr.io/inspire-labs-tms-tech/inspire-tms-api:${{ needs.version.outputs.latest }}
        ports:
          - 8080:8080
        credentials:
          username: inspire-labs-tech-readonly
          password: ${{ secrets.INSPIRE_TMS_READONLY_PERSONAL_ACCESS_TOKEN }}
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'
          server-id: 'github'
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Publish to GitHub Packages
        working-directory: ./types/java
        run: |
          bash ./build.sh
          REPO="github::default::https://maven.pkg.github.com/inspire-labs-tms-tech/inspire-tms-api"
          python patch-pom.xml.py
          cd gen && mvn deploy -DaltReleaseDeploymentRepository="${REPO}" -DaltSnapshotDeploymentRepository="${REPO}"
        env:
          VERSION: ${{ needs.version.outputs.latest }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  typescript:
    name: Generate Typescript Types
    needs:
      - version
      - dockerize
    runs-on: ubuntu-latest
    services:
      self:
        image: ghcr.io/inspire-labs-tms-tech/inspire-tms-api:latest
        ports:
          - 8080:8080
        credentials:
          username: inspire-labs-tech-readonly
          password: ${{ secrets.INSPIRE_TMS_READONLY_PERSONAL_ACCESS_TOKEN }}
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: setup
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: persist version
        run: sed -i -e "s|0.0.0|${{ needs.version.outputs.latest }}|g" "${{ github.workspace }}/types/typescript/package.json"

      - run: npm ci
        working-directory: ./types/typescript

      - name: generate typescript client
        run: npm run build
        working-directory: ./types/typescript

      - name: publish to GHPR
        run: npm publish --access public
        working-directory: ./types/typescript
        env:
          GH_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: publish to NPM
        uses: JS-DevTools/npm-publish@v3
        with:
          token: ${{ secrets.NPM_TOKEN }}
          package: "${{ github.workspace }}/types/typescript/package.json"
          access: public
